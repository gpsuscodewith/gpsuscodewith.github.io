<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>GPSUS Playbook â€“ GPSUS Team Roles</title>
    <link>https://github.com/gpsuscodewith/gpsuscodewith.github.io/roles/</link>
    <description>Recent content in GPSUS Team Roles on GPSUS Playbook</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    
	  <atom:link href="https://github.com/gpsuscodewith/gpsuscodewith.github.io/roles/index.xml" rel="self" type="application/rss+xml" />
    
    
      
        
      
    
    
    <item>
      <title>Roles: Tech Lead&#39;s Engineering Fundamentals Checklist</title>
      <link>https://github.com/gpsuscodewith/gpsuscodewith.github.io/roles/tech-leads-checklist/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://github.com/gpsuscodewith/gpsuscodewith.github.io/roles/tech-leads-checklist/</guid>
      <description>
        
        
        &lt;h1 id=&#34;tech-leads-engineering-fundamentals-checklist&#34;&gt;Tech Lead&amp;rsquo;s Engineering Fundamentals Checklist&lt;/h1&gt;
&lt;p&gt;This checklist helps to ensure that our projects meet our Engineering Fundamentals.&lt;/p&gt;
&lt;h2 id=&#34;source-control&#34;&gt;Source Control&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; The master branch is locked.&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; Merges are done through PRs.&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; PRs reference related work items.&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; Commit history is consistent and commit messages are informative (what, why).&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; Secrets are not part of the commit history or made public. (see &lt;a href=&#34;continuous-integration/credential-scanning/readme.md&#34;&gt;Credential scanning&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; Public repositories follow the &lt;a href=&#34;source-control/contributing/readme.md#required-files-in-default-branch-for-public-repositories&#34;&gt;OSS guidelines&lt;/a&gt;, see &lt;code&gt;Required files in default branch for public repositories&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;More details on &lt;a href=&#34;source-control/readme.md&#34;&gt;Source Control&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;work-item-tracking&#34;&gt;Work Item Tracking&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; All items are tracked in AzDevOps (or similar).&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; The board is organized (swim lanes, feature tags, technology tags).&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;testing&#34;&gt;Testing&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; Unit tests cover the majority of all components (&amp;gt;90% if possible).&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; Integration tests run to test the solution e2e.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;More details on &lt;a href=&#34;test-first-development/unit-testing/readme.md&#34;&gt;Unit Testing&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;cicd&#34;&gt;CI/CD&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; Project runs CI with automated build and test on each PR.&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; Project uses CD to manage deployments to a replica environment before PRs are merged to master.&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; Master is always shippable.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;security---to-do&#34;&gt;Security - TO DO&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; Access control.&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; Separation of concerns.&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; Robust treatment of secrets.&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; Encryption for data in transit (and if necessary at rest) and password hashing.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;observability&#34;&gt;Observability&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; Significant business and functional events are tracked and related metrics collected.&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; Application faults and errors are logged.&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; Health of the system is monitored.&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; The client and server side observability data can be differentiated.&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; Logging configuration can be modified without code changes (eg: verbose mode).&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;observability/correlation-id.md&#34;&gt;Incoming tracing context&lt;/a&gt; is propagated to allow for production issue debugging purposes.&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; GDPR compliance is ensured regarding PII (Personally Identifiable Information).&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;agilescrum&#34;&gt;Agile/Scrum&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; Scrum Master (fixed/rotating) to run standup daily.&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; Agile process clearly defined within team.&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; Tech Lead (+ PO/Others) have responsibility for backlog management and grooming.&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; Working agreement between members of team and customer.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;design-reviews&#34;&gt;Design Reviews&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; Process for conducting design reviews is included in the &lt;a href=&#34;https://github.com/gpsuscodewith/gpsuscodewith.github.io/team-agreements/working-agreements/readme.md&#34;&gt;Working Agreement&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; Design reviews for each major component of the solution are carried out and documented, including alternatives.&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; Stories and/or PRs link to the design document.&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; Each user story includes a task for design review by default, which is assigned or removed during sprint planning.&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; Project advisors are invited to design reviews or asked to give feedback to the design decisions captured in documentation.&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; Discover all the reviews that the customer&amp;rsquo;s processes require and plan for them.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;code-reviews&#34;&gt;Code Reviews&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; Clear agreement in the team as to function of code reviews.&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; Code review checklist or established process.&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; A minimum number of reviewers (usually 2) for a PR merge is enforced by policy.&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; Linters/Code Analyzers, unit tests and successful builds for PR merges are set up.&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; Process to enforce a quick review turnaround.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;More details on &lt;a href=&#34;code-reviews/README.md&#34;&gt;Code Reviews&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;retrospectives&#34;&gt;Retrospectives&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; Set time for retrospectives each week/at the end of each sprint.&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 1-3 proposed experiments to be tried each week/sprint to improve the process.&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; Experiments have owners and are added to project backlog.&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; Longer retrospective for Milestones and project completion.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;More details on &lt;a href=&#34;retrospectives/readme.md&#34;&gt;Retrospectives&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;engineering-feedback&#34;&gt;Engineering Feedback&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; Submit business and technical blockers that prevent project success&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; Add suggestions for improvements to leveraged services and components&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; Ensure feedback is detailed and repeatable&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;More details on &lt;a href=&#34;engineering-feedback/readme.md&#34;&gt;Engineering Feedback&lt;/a&gt;&lt;/p&gt;

      </description>
    </item>
    
  </channel>
</rss>
